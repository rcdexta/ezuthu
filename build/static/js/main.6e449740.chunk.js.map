{"version":3,"sources":["App.js","index.js"],"names":["dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","App","React","Component","constructor","props","super","this","state","ranks","undefined","clear","saveableCanvas","setState","saveImage","canvas","drawing","data","context","getContext","w","width","h","height","getImageData","compositeOperation","globalCompositeOperation","fillStyle","fillRect","imageData","toDataURL","concat","clearRect","putImageData","file","formData","FormData","append","name","axios","post","headers","Content-Type","then","response","results","window","scrollTo","document","body","scrollHeight","createRef","render","react_default","a","createElement","className","build","sm","style","border","marginTop","es","ref","canvasDraw","lazyRadius","brushColor","canvasWidth","onClick","undo","margin","fontSize","rank1","rank2","rank3","rootElement","getElementById","ReactDOM","StrictMode","App_App"],"mappings":"sOAMA,MAAMA,EAAgB,CAACC,EAASC,KAC9B,MAAMC,EAAMF,EAAQG,MAAM,KACpBC,EAAOF,EAAI,GAAGG,MAAM,WAAW,GAC/BC,EAAOC,KAAKL,EAAI,IACtB,IAAIM,EAAIF,EAAKG,OACb,MAAMC,EAAQ,IAAIC,WAAWH,GAC7B,KAAOA,GACLE,EAAMF,EAAI,GAAKF,EAAKM,WAAWJ,EAAI,GACnCA,GAAK,EAEP,OAAO,IAAIK,KAAK,CAACH,GAAQT,EAAU,CAAEa,KAAMV,KAG9B,MAAMW,UAAYC,IAAMC,UAIrCC,YAAYC,GACVC,MAAMD,GADWE,KAFnBC,MAAQ,CAAEC,WAAOC,GAEEH,KAKnBI,MAAQ,MACNJ,KAAKK,eAAeD,QACpBJ,KAAKM,SAAS,CAACJ,WAAOC,MAPLH,KAUnBO,UAAY,MACV,MAAMC,EAASR,KAAKK,eAAeG,OAAOC,QAG1C,IAIIC,EAJAC,EAAUH,EAAOI,WAAW,MAE5BC,EAAIL,EAAOM,MACXC,EAAIP,EAAOQ,OAKbN,EAAOC,EAAQM,aAAa,EAAG,EAAGJ,EAAGE,GAGrC,IAAIG,EAAqBP,EAAQQ,yBAGjCR,EAAQQ,yBAA2B,mBAGnCR,EAAQS,UAnBc,OAsBtBT,EAAQU,SAAS,EAAG,EAAGR,EAAGE,GAI5B,IAAIO,EAAYd,EAAOe,UAAP,SAAAC,OAzBH,QA6BXb,EAAQc,UAAU,EAAG,EAAGZ,EAAGE,GAG3BJ,EAAQe,aAAahB,EAAM,EAAG,GAG9BC,EAAQQ,yBAA2BD,EAGrC,MAAMS,EAAOjD,EAAc4C,GAErBM,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,EAAMA,EAAKI,MAMnCC,IACGC,KAAK,UAAWL,EAJJ,CACbM,QAAS,CAAEC,eAAgB,yBAI1BC,KAAKC,IACJ,MAAMC,EAAUD,EAAS3B,KACzBV,KAAKM,SAAS,CAAEJ,MAAOoC,IACvBC,OAAOC,SAAS,EAAGC,SAASC,KAAKC,kBA/DrC3C,KAAKK,eAAiBV,IAAMiD,YAmE9BC,SAAS,MACC3C,EAAUF,KAAKC,MAAfC,MACR,OACE4C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAACE,EAAA,UAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,CAAKC,GAAI,GAAT,iDAEEL,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEC,OAAQ,iBAAkBC,UAAW,IACjDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,IAAKC,GAAezD,KAAKK,eAAiBoD,EAC1CC,WAAY,EACZC,WAAW,OACXC,YAAY,UAGhBd,EAAAC,EAAAC,cAAA,UACEa,QAAS7D,KAAKI,OADhB,SAKA0C,EAAAC,EAAAC,cAAA,UACEa,QAAS,KACP7D,KAAKK,eAAeyD,SAFxB,QAOAhB,EAAAC,EAAAC,cAAA,UAAQa,QAAS7D,KAAKO,WAAtB,WAEFuC,EAAAC,EAAAC,cAACE,EAAA,IAAD,CAAKC,GAAI,GACPL,EAAAC,EAAAC,cAACE,EAAA,UAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACGhD,GACC4C,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEW,OAAQ,UACpBjB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEY,SAAU,QAAU9D,EAAM+D,OACxCnB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEY,SAAU,GAAIV,UAAW,IAAvC,cAKRR,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACGhD,GACC4C,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEW,OAAQ,UACpBjB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEY,SAAU,QAAU9D,EAAMgE,OACxCpB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEY,SAAU,GAAIV,UAAW,IAAvC,cAKRR,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,IAAD,KACGhD,GACC4C,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEW,OAAQ,UACpBjB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEY,SAAU,QAAU9D,EAAMiE,OACxCrB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEY,SAAU,GAAIV,UAAW,IAAvC,oBCjJxB,MAAMc,EAAc3B,SAAS4B,eAAe,QAC5CC,IAASzB,OACPC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,WAAP,KACEzB,EAAAC,EAAAC,cAACwB,EAAD,OAEFJ","file":"static/js/main.6e449740.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport axios from \"axios\";\nimport { Container, Row, Col } from 'react-grid-system'\n\nconst dataURLtoFile = (dataurl, filename) => {\n  const arr = dataurl.split(\",\");\n  const mime = arr[0].match(/:(.*?);/)[1];\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  while (n) {\n    u8arr[n - 1] = bstr.charCodeAt(n - 1)\n    n -= 1; // to make eslint happy\n  }\n  return new File([u8arr], filename, { type: mime });\n};\n\nexport default class App extends React.Component {\n\n  state = { ranks: undefined }\n\n  constructor(props) {\n    super(props);\n    this.saveableCanvas = React.createRef();\n  }\n\n  clear = () => {\n    this.saveableCanvas.clear();\n    this.setState({ranks: undefined})\n  }\n\n  saveImage = () => {\n    const canvas = this.saveableCanvas.canvas.drawing;\n    const backgroundColor = \"#fff\";\n    const type = \"png\";\n    let context = canvas.getContext(\"2d\");\n    //cache height and width\n    let w = canvas.width;\n    let h = canvas.height;\n    let data;\n\n    if (backgroundColor) {\n      //get the current ImageData for the canvas.\n      data = context.getImageData(0, 0, w, h);\n\n      //store the current globalCompositeOperation\n      var compositeOperation = context.globalCompositeOperation;\n\n      //set to draw behind current content\n      context.globalCompositeOperation = \"destination-over\";\n\n      //set background color\n      context.fillStyle = backgroundColor;\n\n      //draw background / rect on entire canvas\n      context.fillRect(0, 0, w, h);\n    }\n\n    //get the image data from the canvas\n    var imageData = canvas.toDataURL(`image/${type}`);\n\n    if (backgroundColor) {\n      //clear the canvas\n      context.clearRect(0, 0, w, h);\n\n      //restore it with original / cached ImageData\n      context.putImageData(data, 0, 0);\n\n      //reset the globalCompositeOperation to what it was\n      context.globalCompositeOperation = compositeOperation;\n    }\n\n    const file = dataURLtoFile(imageData);\n\n    const formData = new FormData();\n    formData.append(\"file\", file, file.name);\n\n    // now upload\n    const config = {\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    };\n    axios\n      .post(\"/upload\", formData, config)\n      .then(response => {\n        const results = response.data;\n        this.setState({ ranks: results })\n        window.scrollTo(0, document.body.scrollHeight);\n      });\n  };\n\n  render() {\n    const { ranks } = this.state\n    return (\n      <div className=\"App\">\n        <h2>Tamil Character Classification</h2>\n        <Container>\n          <Row>\n            <Col sm={6}>\n              Draw a tamil alphabet filling the canvas below\n              <div style={{ border: '1px solid #000', marginTop: 5 }}>\n                <CanvasDraw\n                  ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\n                  lazyRadius={0}\n                  brushColor=\"#000\"\n                  canvasWidth=\"100%\"\n                />\n              </div>\n              <button\n                onClick={this.clear}\n              >\n                Clear\n          </button>\n              <button\n                onClick={() => {\n                  this.saveableCanvas.undo();\n                }}\n              >\n                Undo\n          </button>\n              <button onClick={this.saveImage}>Submit</button>\n            </Col>\n            <Col sm={6}>\n              <Container>                \n                <Row>\n                  <Col>\n                    {ranks &&\n                      <div style={{ margin: '0.5em' }}>\n                        <div style={{ fontSize: '4em' }}>{ranks.rank1}</div>\n                        <div style={{ fontSize: 11, marginTop: 3 }}>Guess 1</div>\n                      </div>\n                    }\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    {ranks &&\n                      <div style={{ margin: '0.5em' }}>\n                        <div style={{ fontSize: '4em' }}>{ranks.rank2}</div>\n                        <div style={{ fontSize: 11, marginTop: 3 }}>Guess 2</div>\n                      </div>\n                    }\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    {ranks &&\n                      <div style={{ margin: '0.5em' }}>\n                        <div style={{ fontSize: '4em' }}>{ranks.rank3}</div>\n                        <div style={{ fontSize: 11, marginTop: 3 }} >Guess 3</div>\n                      </div>\n                    }\n                  </Col>\n                </Row>\n\n              </Container>\n            </Col>\n          </Row>\n        </Container>\n\n      </div >\n    );\n  }\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}